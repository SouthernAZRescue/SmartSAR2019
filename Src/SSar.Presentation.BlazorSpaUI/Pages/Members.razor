@page "/members"
@using System.Runtime.CompilerServices
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SSar.BC.MemberMgmt.Application.Queries
@inject IAccessTokenProvider AuthenticationService
@inject NavigationManager Navigation
@attribute [Authorize]

<h1>Members</h1>

@if (membersVm == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <SfGrid DataSource="@membersVm.Members"></SfGrid>
}



@code {
    private MembersVm membersVm = new MembersVm();

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        httpClient.BaseAddress = new Uri(Navigation.BaseUri);

        var tokenResult = await AuthenticationService.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token, redirect: true))
        {
            httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token.Value}");
            membersVm = await httpClient.GetFromJsonAsync<MembersVm>("Members");
        }
    }
}
