@page "/members"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SSar.Presentation.Common
@using SSar.BC.MemberMgmt.Application.Queries
@inject IAccessTokenProvider AuthenticationService
@inject NavigationManager Navigation
@attribute [Authorize]

<h1>Members</h1>

Test of Member retrieval API

@if (membersVm == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>First</th>
            <th>Middle</th>
            <th>Last</th>
            <th>Nickname</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var member in membersVm.Members)
            {
                <tr>
                    <td>@member.FirstName</td>
                    <td>@member.MiddleName</td>
                    <td>@member.LastName</td>
                    <td>@member.Nickname</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private MembersVm membersVm;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        httpClient.BaseAddress = new Uri(Navigation.BaseUri);

        var tokenResult = await AuthenticationService.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token, redirect: true))
        {
            httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token.Value}");
            membersVm = await httpClient.GetFromJsonAsync<MembersVm>("Members");
        }
    }
}
